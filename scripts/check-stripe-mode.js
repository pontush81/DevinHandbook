#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const dotenv = require('dotenv');

// S√∂k efter .env.local filen
const envPath = path.resolve(process.cwd(), '.env.local');

try {
  // Kontrollera om .env.local filen finns
  if (!fs.existsSync(envPath)) {
    console.log('\x1b[33m%s\x1b[0m', 'Ingen .env.local fil hittades. Anv√§nder .env.local.template ist√§llet.');
    
    const templatePath = path.resolve(process.cwd(), 'env.local.template');
    if (!fs.existsSync(templatePath)) {
      console.log('\x1b[31m%s\x1b[0m', 'Varken .env.local eller env.local.template hittades. Kan inte kontrollera Stripe-l√§ge.');
      process.exit(1);
    }
    
    // Anv√§nd mallen om ingen .env.local finns
    dotenv.config({ path: templatePath });
  } else {
    // L√§s in .env.local filen
    dotenv.config({ path: envPath });
  }
  
  // H√§mta Stripe-nycklarna
  const stripeKey = process.env.STRIPE_SECRET_KEY;
  const stripeTestKey = process.env.STRIPE_SECRET_KEY_TEST;
  
  if (!stripeKey && !stripeTestKey) {
    console.log('\x1b[31m%s\x1b[0m', 'Inga Stripe-nycklar hittades i milj√∂konfigurationen.');
    process.exit(1);
  }
  
  // Kontrollera vilken typ av nycklar det √§r
  const prodKeyIsTest = stripeKey && stripeKey.startsWith('sk_test_');
  const prodKeyIsLive = stripeKey && stripeKey.startsWith('sk_live_');
  
  const testKeyIsTest = stripeTestKey && stripeTestKey.startsWith('sk_test_');
  
  console.log('\x1b[36m%s\x1b[0m', '=== Stripe-konfiguration ===');
  
  // Kontrollera produktionsnyckel
  if (stripeKey) {
    if (prodKeyIsTest) {
      console.log('\x1b[33m%s\x1b[0m', '‚ö†Ô∏è  STRIPE_SECRET_KEY √§r konfigurerad med en testnyckel!');
      console.log('\x1b[33m%s\x1b[0m', '   Detta kan vara problematiskt om denna nyckel anv√§nds i produktion.');
    } else if (prodKeyIsLive) {
      console.log('\x1b[32m%s\x1b[0m', '‚úÖ STRIPE_SECRET_KEY √§r konfigurerad med en produktionsnyckel.');
    } else {
      console.log('\x1b[33m%s\x1b[0m', '‚ö†Ô∏è  STRIPE_SECRET_KEY har ett ok√§nt format.');
    }
  } else {
    console.log('\x1b[33m%s\x1b[0m', '‚ö†Ô∏è  STRIPE_SECRET_KEY √§r inte konfigurerad.');
  }
  
  // Kontrollera testnyckel
  if (stripeTestKey) {
    if (testKeyIsTest) {
      console.log('\x1b[32m%s\x1b[0m', '‚úÖ STRIPE_SECRET_KEY_TEST √§r konfigurerad med en testnyckel.');
    } else {
      console.log('\x1b[33m%s\x1b[0m', '‚ö†Ô∏è  STRIPE_SECRET_KEY_TEST √§r inte en giltig testnyckel.');
    }
  } else {
    console.log('\x1b[33m%s\x1b[0m', '‚ö†Ô∏è  STRIPE_SECRET_KEY_TEST √§r inte konfigurerad.');
  }
  
  // Summering av konfigurationen
  console.log('\x1b[36m%s\x1b[0m', '\n=== Sammanfattning ===');
  
  if (prodKeyIsLive && testKeyIsTest) {
    console.log('\x1b[32m%s\x1b[0m', '‚úÖ Konfigurationen √§r korrekt f√∂r b√•de produktion och testmilj√∂.');
    console.log('\x1b[32m%s\x1b[0m', '   - Produktionsmilj√∂n kommer att anv√§nda skarpa betalningar');
    console.log('\x1b[32m%s\x1b[0m', '   - Test-/utvecklingsmilj√∂n kommer att anv√§nda testbetalningar');
  } else if (!stripeKey && testKeyIsTest) {
    console.log('\x1b[33m%s\x1b[0m', '‚ö†Ô∏è  Endast testmilj√∂ √§r konfigurerad. Ingen produktionsnyckel hittades.');
  } else if (prodKeyIsLive && !stripeTestKey) {
    console.log('\x1b[33m%s\x1b[0m', '‚ö†Ô∏è  Endast produktionsmilj√∂ √§r konfigurerad. Ingen testnyckel hittades.');
  } else {
    console.log('\x1b[31m%s\x1b[0m', '‚ùå Konfigurationen verkar vara felaktig eller ofullst√§ndig.');
  }
  
  console.log('\x1b[36m%s\x1b[0m', '\n=== Anv√§ndning ===');
  if (testKeyIsTest) {
    console.log('\x1b[32m%s\x1b[0m', 'üß™ I testl√§ge kan du anv√§nda testkort som 4242 4242 4242 4242');
    console.log('\x1b[32m%s\x1b[0m', '   med valfritt framtida utg√•ngsdatum, CVC och postnummer.');
  }
  
} catch (error) {
  console.error('\x1b[31m%s\x1b[0m', 'Ett fel intr√§ffade vid kontroll av Stripe-l√§ge:');
  console.error(error);
  process.exit(1);
} 